input {
    # we expect our events come as a event that looks like
    # [INFO] {"event": {"title": "Hello World Title", "content": "hello world"}}
    stdin {}
}

filter {
    # extracted the JSON content within the event first
    # and assign as [payload] Field
    grok {
        match => {
            "message" => "\[%{WORD:level}\] (?<payload>.+?$)"
        }
    }

    # use json plugin to parse the JSON string from [payload] Field
    json {
        # decode the event json from [payload] Field populated from above
        source => "payload"

        # encode the parsed json to a [parsed] Field
        target => "parsed"

        # populate Fields into the pipeline
        # this is useful to immediately do some simple transformation
        # based on the existing json fields
        # 1. reference the parsed json Field
        # 2. referenced nested Field from therein
        add_field => {
            "fieldA" => "static A"
            "fieldB" => "static B"
            "eventTitle" => "%{[parsed][event][title]}"
            "eventContent" => "%{[parsed][event][content]}"

        }
    }
}

output {
    stdout {}
}
